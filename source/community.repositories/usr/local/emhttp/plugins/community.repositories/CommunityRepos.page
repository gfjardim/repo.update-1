Menu="Docker:4"
Title="Community Repositories"
Cond="(pgrep('docker')!==false)"
---
<?
$plugin = "community.repositories";
$waiting = "<tr><td colspan='5'><br><center><img src='/webGui/images/spinner.gif'>&nbsp;<em>Please wait... retrieving repositories information!</em></center></td></tr>";
$line_color = $display['theme']=='black' ? '#202020' : '#E8E8E8';
?>
<style>
.searchSubmit{font-family:'FontAwesome';width:29px;height:26px;border:1px solid #dadada;border-radius:0px 4px 4px 0px;font-size:11px;position:relative;padding:0px 2px;background:#DADADA;border:none;cursor:pointer;}
table#templates_list tbody td.topRow{border-top:1px solid <?=$line_color?>;}
</style>
<script>
var URL = "/plugins/<?=$plugin?>/include/exec.php";
var imgRed = {src:"/plugins/<?=$plugin?>/images/red.png",title:'Click to remove container'};
var imgGreen = {src:"/plugins/<?=$plugin?>/images/green.png",title:'Click to add container'};
var last = $('input[name$="tabs"]').length;
<?if ($tabbed):?>
<?$shift = 'shift2';?>
$('.tabs').append("<span id='searchFilter' class='status vhshift' style='display:none'><input type='checkbox' id='selectBeta' onchange='toggleBeta(this.checked)'>Include Beta<input type='text' id='searchBox' class='narrow' placeholder='Search' style='margin-left:10px;margin-right:0'><button class='searchSubmit' style='margin-right:10px' onclick='doSearch(true)'><i id='searchButton' class='fa fa-search fa-lg'></i></button><input type='button' value='Update Repositories' style='margin-right:2px' onclick='forceUpdate()'><input type='button' id='openclose' value='Show' onclick='openClose(this.value)'></span>");
for (var x=1; x<last; x++) $('#tab'+x).bind({click:function(){$('#searchFilter').hide();}});
$('#tab'+last).bind({click:function(){$('#searchFilter').show();}});
<?else:?>
<?$shift = 'shift';?>
$('div[id=title]').last().append("<span id='searchFilter' class='status vhshift'><input type='checkbox' id='selectBeta' onchange='toggleBeta()'>Include Beta<input type='text' id='searchBox' class='narrow' placeholder='Search' style='margin-left:10px;margin-right:0'><button class='searchSubmit' style='margin-right:10px' onclick='doSearch(true)'><i id='searchButton' class='fa fa-search fa-lg'></i></button><input type='button' value='Update Repositories' style='margin-right:2px' onclick='forceUpdate()'><input type='button' id='openclose' value='Show' onclick='openClose(this.value)'></span>");
<?endif;?>
$(function(){
  getContent(true);
  $('#searchBox').keyup(function(e) {if(e.which == 13){doSearch(false);}});
});

function toggleBeta(state) {
  $('#selectBeta').prop('checked',state);
  $('.selectHelp').prop('checked',state);   
  $('.help3').toggle();
  doSearch(false);
}

function doSearch(button) {
  var filter = $('#searchBox').val();
  if ($('#searchButton').hasClass('fa-search')) {
    if (filter) { $('#searchButton').removeClass('fa-search').addClass('fa-remove'); $('.help0').hide(); $('.help1').hide(); $('.help2').hide(); }
  } else if (button) {
    if ($('#searchButton').hasClass('fa-remove')) { $('#searchButton').removeClass('fa-remove').addClass('fa-search'); $('.help0').show(); $('.help1').show(); $('.help2').show(); }
    filter = '';
    $('#searchBox').val('');
  } else if (!filter) return;
  $('#BackToTop').hide();
  $.post(URL,{action:'get_content',filter:filter,beta:$('#selectBeta').is(':checked')},function(data) {
    if (data) $('#templates_content').html(data);
    $('#templates_list').trigger('update');
    $('.desc_readmore').readmore({maxHeight:50});
    if (!filter && $('#openclose').val()=='Show') $('#templates_list .expand-child td').hide();
    $('#BackToTop').show();
  });
}

<<<<<<< HEAD
  $.fn.textWidth = function(text, font) {
    if (!$.fn.textWidth.fakeEl) $.fn.textWidth.fakeEl = $('<span>').hide().appendTo(document.body);
    $.fn.textWidth.fakeEl.text(text || this.val() || this.text()).css('font', font || this.css('font'));
    return $.fn.textWidth.fakeEl.width();
  };
  function minLength(text, font) {
    terms=text.split(" ");min = 0;
    for (var i = terms.length - 1; i >= 0; i--) {if (terms[i].trim().length) {min = Math.max(terms[i].length,min);}};
    for (var i = terms.length - 1; i >= 0; i--) {if (terms[i].trim().length) {min = Math.min(terms[i].length,min);}};
    return min;
  }
  function searchBoxIcon(icon) {
    if (icon == 'remove' && $('#searchbox').val().length) {
      $('#search_button').attr('class','fa fa-lg fa-remove');$('.searchsubmit').unbind('click').click(function(){$('#searchbox').val('');doSearch();});
    } else if (minLength($("#searchbox").val()) > 2 || ! $('#searchbox').val().length) {
      $('#search_button').attr('class','fa fa-lg fa-search');$('.searchsubmit').unbind('click').click(function(){doSearch();});
    } else {
      $('#search_button').attr('class','fa fa-lg fa-ban');$('.searchsubmit').unbind('click');
    }
  }
  function startWaitMe(el) {
    <?if ($display['theme'] == 'white'):?>
    $(el).waitMe({effect:'ios',text:'Loading repositories, please wait...',bg:'rgba(255,255,255,0.9)',color:'#000',sizeW:'',sizeH:'',source:''});
    <?else:?>
    $(el).waitMe({effect:'ios',text:'Loading repositories, please wait...',bg:'rgba(0,0,0,0.7)',color:'#FFF',sizeW:'',sizeH:'',source:''});
    <?endif;?>
    $('.waitMe_content').css('top','100px');
  }
  function toggleRepo(img, url) {
    $(img).load(function(){
      $.post(URL,{action:'toggle_repo', url:url},function(data) { 
        if(data.status){ if(data.status == 'enabled'){
          $(img).attr('title',imgRed.title).attr('src',imgRed.src);
        } else {
          $(img).attr('title',imgGreen.title).attr('src',imgGreen.src);
        }
      }},'json');
      $(img).unbind('load');
    });
    $(img).attr('src', '/plugins/<?=$plugin;?>/images/spinner.gif');
  }
  function forceUpdate() {
    $.post(URL,{action:'force_update'},function(data){loadCommunityTab(tab_docker_community);},'json');
  }
  function getContent(filter) {
    if (filter === undefined) var filter ="";
    startWaitMe('#repo_content');
    $.post(URL,{action:'get_content',filter:filter},function(data){$('#templates_content').html(data);$('#repo_content').waitMe('hide');});
  }
  function doSearch() {
    filter = $("#searchbox").val();
    if (! searching && (minLength(filter) > 2 || filter.length == 0)) {
      searching = true;
      getContent(filter);
function forceUpdate() {
  $('#templates_content').html("<?=$waiting?>");
  $.post(URL,{action:'force_update'},function(){getContent(false);});
}

function getContent(init) {
  $('#BackToTop').hide();
  $.post(URL,{action:'get_content',beta:$('#selectBeta').is(':checked')},function(data) {
    if (data) $('#templates_content').html(data);
    if (init) $('#templates_list').tablesorter({sortList:[[0,0]],headers:{1:{sorter:false},4:{sorter:false}}}); else $('#templates_list').trigger('update');
    $('.desc_readmore').readmore({maxHeight:50});
    $('#templates_list .expand-child td').hide();
    $('#BackToTop').show();
    if (init) {
      $('#templates_list').on('click','.toggle',function() {
        $(this).closest('tr').nextUntil('tr:not(.expand-child)').find('td').toggle();
        return false;
      });
    }
  });
}

function toggleRepo(img, url) {
  $(img).load(function(){
    $.post(URL,{action:'toggle_repo', url:url},function(data) {
      if(data.status){ if(data.status == 'enabled'){
        $(img).attr('title',imgRed.title).attr('src',imgRed.src);
      } else {
        $(img).attr('title',imgGreen.title).attr('src',imgGreen.src);
      }
    }},'json');
    $(img).unbind('load');
  });
  $(img).attr('src', '/plugins/<?=$plugin;?>/images/spinner.gif');
}

function openClose(action) {
  if (action=='Show') {
    $('#templates_list .expand-child td').show();
    $('#openclose').val('Hide');
  } else {
    $('#templates_list .expand-child td').hide();
    $('#openclose').val('Show');
  }
  $('.help2').toggle();
}
</script>

> <span class='help0'>Click on <img src='/plugins/community.repositories/images/green.png' id='cartGreen' width=25> to add a repository to the list of templates or <img src='/plugins/community.repositories/images/red.png' id='cartRed' width=25> to remove a repository from the list of templates.</span>
>
> Click <input type=button value='Update Repositories' style='margin:0 2px' onclick='forceUpdate()'> to force an update of all repositories and containers.
>
> <span class='help1'>Click on the <strong>name</strong> of the repository to show / hide all of the available containers within this repository.</span>
>
> Click on the <strong>icon</strong> of the container to add the single container (a new window will open).
>
> <span class='help2'>Click <input type=button value='Show' style='margin:0 2px' onclick='openClose(this.value)'> to display all available containers within the repositories.</span>
> <span class='help2' style='display:none'>Click <input type=button value='Hide' style='margin:0 2px' onclick='openClose(this.value)'> to to only display the first container within a repository.</span>
>
> <span class='help3'>Select the <input type='checkbox' class='selectHelp' onchange='toggleBeta(this.checked)'><strong>Include Beta</strong> check box to include Beta Repositories in the main list / searches.</span>
> <span class='help3' style='display:none'>Deselect the <input type='checkbox' class='selectHelp' checked onchange='toggleBeta(this.checked)'><strong>Include Beta</strong> check box to exclude Beta Repositories from the main list / searches.</span>
> <br><br>

<table id='templates_list' class='tablesorter <?=$shift?>'>
<thead><tr><th style='width:220px'>Repository</th><th style='width:64px'></th><th>Container</th><th>Author</th><th>Description</th></tr></thead>
<tbody id='templates_content'><?=$waiting?></tbody>
</table>
<a href="#" id="BackToTop" onclick="var top=<?if ($tabbed):?>0<?else:?>$('div[id=title]').last().offset().top<?endif;?>;$('html,body').animate({scrollTop:top},'slow')">Back To Top</a>

